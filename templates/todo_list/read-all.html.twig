{% extends 'base.html.twig' %}

{% block body %}
    <div class="d-flex flex-wrap container">
        {% for list in lists %}
            <div class="card m-3" style="width: 18rem;">
                <div class="card-body">
                    <h5 class="card-title" style="color: {{ list.color }}">{{ list.name }}</h5>
                    <ul class="card-text">
                        {% for task in list.tasks %}
                            <a href="/update-task-status/{{ task.id }}" class="btn btn-link js-status">
                                {% if task.completed %}
                                    <i class="fas fa-square"></i>
                                {% else %}
                                    <i class="far fa-square"></i>
                                {% endif %}
                            </a>
                            {{ task.title }}
                            <a href="/update-task/{{ task.id }}"><i class="fas fa-edit text-warning"></i></a>
                            <a href="/delete-task/{{ task.id }}"><i class="fas fa-minus-circle text-danger"></i></a><br>
                        {% endfor %}
                    </ul>
                    <center><a href="/create-task/{{ list.id }}" class="btn btn-success mb-2"><i class="far fa-plus-square"></i></a></center><br>
                    <a href="/update-list/{{ list.id }}" class="btn btn-warning"><i class="far fa-edit"></i></a>
                    <a href="/delete-list/{{ list.id }}" class="btn btn-danger"><i class="fas fa-minus-circle"></i></a>
                </div>
            </div>
        {% endfor %}
    </div>
{% endblock %}

{% block javascripts %}
    <!-- Récupération d'axios pour appeler des requêtes HTTP de manière asynchrone -->
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

    <!-- Création de mon propre script JavaScript -->
    <script>
        window.addEventListener("load", event => { // Lors du chargement de la page 
            // On ajoute un écouteur d'évenement 'click' sur chaque lien de mise à jour de statut 
            document.querySelectorAll("a.js-status").forEach(link => {
                link.addEventListener("click", updateStatus);
            });
        });

        // Lorsque le lien est cliqué, on appelle cette fonction JS 
        function updateStatus(event) {
            event.preventDefault(); // Évite la rediction vers la route '/update-task-status/{id}' imposée par le lien HTML 

            const checkIcon = this.querySelector("i.fa-square"); // Récupération de l'icône Font Awesome 
            // Exécution de la requête HTTP associée à la route passée dans le lien HTML 
            axios.post(this.href).then(response => { 
                if (checkIcon.classList.contains("fas")) { // Met à jour le style de l'icône 
                checkIcon.classList.replace("fas", "far");
                } else {
                    checkIcon.classList.replace("far", "fas");
                } 
            }).catch(error => { // En cas d'erreur rencontrée lors de la mise à jour des données 
                console.error(error); // Affiche l'erreur en console 
                window.alert("Une erreur est survenue"); // Affiche un message d'erreur via une modale d'alerte
            });
        }
    </script>
{% endblock %}

